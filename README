SAVE THIS PROJECT - THIS ALL SEEMS TO WORK, AND WAS A BIT DIFFICULT TO FIGURE OUT:

This is a setup for building a Plot.ly Dash (data science on Flask) app with:
- Gunicorn - a real web server
- Docker - allows easy deployment

Also demonstrates how to create REST endpoints, see /hello route in graph.py

Melded some code from a couple of github repos:

*Copied* (not cloned) from:
https://github.com/nethacker/ubuntu-flask-gunicorn-docker.git and then modified

His README:
https://github.com/nethacker/ubuntu-flask-gunicorn-docker

Blog:
https://philchen.com/2019/07/09/a-scalable-flask-application-using-gunicorn-on-ubuntu-18-04-in-docker

Docker build with:
docker build -t swearingen/ubuntu-flask-gunicorn-docker:latest .

Docker run with:
docker run --shm-size=512m --detach -p 8080:8080 swearingen/ubuntu-flask-gunicorn-docker:latest

IMPORTANT NOTES FOR LOCAL DEVELOPMENT MODE (NO DOCKER):

mkdir gunicorn-worker-tmp-dir

Start up with a local gunicorn config file, that specifies a couple of things differently:
- different local user name
- different gunicorn temp directory location
  
  gunicorn -c local_gunicorn_config.py --worker-tmp-dir ./gunicorn-worker-tmp-dir  graph:server

